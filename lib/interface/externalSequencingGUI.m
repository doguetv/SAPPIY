function [Data, TTL_IN] = externalSequencingGUI(Header, Data, TTL_IN, Rate, xmlSource)

%Display data in chart
ftemp = figure('NumberTitle', 'off', ...
    'Name', getXML(xmlSource, 'Label', 'dataSequencing'), ...
    'menu', 'none', ...
    'Position', get(0, 'screensize')*.6);
movegui(ftemp, 'center')
ax = axes('Parent', ftemp, ...
    'units', 'normalized', ...
    'position', [.1, .1, .8, .6]);
try
    ax.Toolbar.Visible = 'on';
catch
    set(ftemp, 'toolbar', 'figure')
    warning('Unable to display axes toolbars using the current Matlab version')
end

%Add controllers
[label, attributes] = getXML(xmlSource, 'Label', 'sequencingSource', {'size', 'weight'});
sequencingSource = uicontrol('Parent', ftemp, ...
    'Style', 'text', ...
    'units', 'normalized', ...
    'Position', [.025, .9, .3, .05], ...
    'HorizontalAlignment', 'left', ...
    'String', label, ...
    'FontSize', str2double(attributes{1}), ...
    'FontWeight', attributes{2});
sequencingSource = uicontrol('Parent', ftemp, ...
    'Style', 'popup', ...
    'units', 'normalized', ...
    'Position', [.35, .9, .3, .05], ...
    'String', Header, ...
    'Callback', @check);
[label, attributes] = getXML(xmlSource, 'Label', 'sequencingOnset', {'size', 'weight'});
sequencingOnset = uicontrol('Parent', ftemp, ...
    'Style', 'text', ...
    'units', 'normalized', ...
    'Position', [.025, .8, .125, .05], ...
    'HorizontalAlignment', 'left', ...
    'String', label, ...
    'FontSize', str2double(attributes{1}), ...
    'FontWeight', attributes{2});
[label, attributes] = getXML(xmlSource, 'Button', 'sequencingBefore', {'size', 'weight'});
sequencingOnsetDirection = uicontrol('Parent', ftemp, ...
    'Style', 'push', ...
    'units', 'normalized', ...
    'Position', [.15, .8, .1, .05], ...
    'String', label, ...
    'FontSize', str2double(attributes{1}), ...
    'FontWeight', attributes{2}, ...
    'Callback', @check);
[label, attributes] = getXML(xmlSource, 'Button', 'sequencingLower', {'size', 'weight'});
sequencingOnsetEdge = uicontrol('Parent', ftemp, ...
    'Style', 'push', ...
    'units', 'normalized', ...
    'Position', [.25, .8, .1, .05], ...
    'String', label, ...
    'FontSize', str2double(attributes{1}), ...
    'FontWeight', attributes{2}, ...
    'Callback', @check);
sequencingOnsetValue = uicontrol('Parent', ftemp, ...
    'Style', 'edit', ...
    'units', 'normalized', ...
    'Position', [.35, .8, .125, .05], ...
    'String', '', ...
    'Callback', @check);
[label, attributes] = getXML(xmlSource, 'Label', 'sequencingOffset', {'size', 'weight'});
sequencingOffset = uicontrol('Parent', ftemp, ...
    'Style', 'text', ...
    'units', 'normalized', ...
    'Position', [.5, .8, .125, .05], ...
    'HorizontalAlignment', 'left', ...
    'String', label, ...
    'FontSize', str2double(attributes{1}), ...
    'FontWeight', attributes{2});
[label, attributes] = getXML(xmlSource, 'Button', 'sequencingAfter', {'size', 'weight'});
sequencingOffsetDirection = uicontrol('Parent', ftemp, ...
    'Style', 'push', ...
    'units', 'normalized', ...
    'Position', [.625, .8, .1, .05], ...
    'String', label, ...
    'FontSize', str2double(attributes{1}), ...
    'FontWeight', attributes{2}, ...   
    'Callback', @check);
[label, attributes] = getXML(xmlSource, 'Button', 'sequencingGreater', {'size', 'weight'});
sequencingOffsetEdge = uicontrol('Parent', ftemp, ...
    'Style', 'push', ...
    'units', 'normalized', ...
    'Position', [.725, .8 .1, .05], ...
    'String', label, ...
    'FontSize', str2double(attributes{1}), ...
    'FontWeight', attributes{2}, ...
    'Callback', @check);
sequencingOffsetValue = uicontrol('Parent', ftemp, ...
    'Style', 'edit', ...
    'units', 'normalized', ...
    'Position', [.825, .8, .125, .05], ...
    'String', '', ...
    'Callback', @check);

launchSequencing = uicontrol('Parent', ftemp, ...
    'Style', 'pushbutton', ...
    'units', 'normalized', ...
    'Position', [.8, .9, .15, .05], ...
    'String', getXML(xmlSource, 'Button', 'launchSequencing'), ...
    'FontWeight', 'bold', ...
    'Callback', 'uiresume(ftemp)');

%Creat boolean check
checkOk = false;
%Call check once
check

%Wait for figure being deleted or sequence button clicked
uiwait(ftemp)

%Manage output arguments and close figure
close(ftemp)

%% Subfunctions
    function check(s, ~)
        %Start setting checkOk to true
        checkOk = true;
        %Check all values defined
        if isnan(str2double(sequencingOnsetValue.String))
            checkOk = false;
        end
        if isnan(str2double(sequencingOffsetValue.String))
            checkOk = false;
        end
        %Call update function
        update
    end

    function update
        cla(ax)
        chanIndex = sequencingSource.Value - 1;
        %Plot current source channel
        if isequal(chanIndex, 0)
            signal = Data;
            timeSequence = zeros(size(signal, 1), size(signal, 2));
            for i = 1:size(signal, 2)
                timeSequence(:, i) = (0:length(signal(:, i))-1) / Rate(i);
            end
        else
            signal = Data(:, chanIndex);
            timeSequence = 0:length(signal)-1 / Rate(chanIndex);
        end
        plot(ax, timeSequence, signal)
        hold on
        %Indicate TTL
        for i = 1:size(TTL_IN, 1)
            %Get axis coordinates of TTL
            x = repmat(timeSequence(TTL_IN(i, 1), 1), 1, 2);
            y = ax.YLim;
            plot(ax, x, y, '--k')
        end
        %Display sequencing if ok
        if checkOk
            %Get Onset limit
            switch sequencingOnsetDirection.String
                case getXML(xmlSource, 'Button', 'sequencingBefore')
                    switch sequencingOnsetEdge.String
                        case getXML(xmlSource, 'Button', 'sequencingLower')
                            if isequal(chanIndex, 0)
                                for c = 1:size(Data, 2)
                                    TTL_IN(i) + str2double(sequencingOnsetValue.String)*Rate(c);
                                end
                            else
                            end
                        case getXML(xmlSource, 'Button', 'sequencingGreater')
                    end
                case getXML(xmlSource, 'Button', 'sequencingAfter')
            end
        else
        %Legend
        legend('Source Signal', 'TTL')
        end
    end
end